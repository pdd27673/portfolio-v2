"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _ui = require("@sanity/ui");
var _Tutorial = _interopRequireDefault(require("./Tutorial"));
var _dataAdapter = _interopRequireDefault(require("./dataAdapter"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
var FeedItem = _ref => {
  var feedItem = _ref.feedItem;
  // Check to see if the feed item has the content needed to render an item with a link and poster image
  var isEmpty = !feedItem.title || !feedItem.guideOrTutorial && !feedItem.externalLink && !feedItem.feedItems;
  if (isEmpty) {
    return null;
  }
  var subtitle = feedItem.description;
  var _feedItem$guideOrTuto = feedItem.guideOrTutorial,
    guideOrTutorial = _feedItem$guideOrTuto === void 0 ? {} : _feedItem$guideOrTuto;
  return /*#__PURE__*/_react.default.createElement(_Tutorial.default, {
    title: feedItem.title,
    href: createUrl(guideOrTutorial.slug, guideOrTutorial._type) || feedItem.externalLink,
    presenterSubtitle: subtitle,
    showPlayIcon: feedItem.hasVideo,
    posterURL: feedItem.poster ? urlBuilder.image(feedItem.poster).height(360).url() : undefined
  });
};
var urlBuilder = _dataAdapter.default.urlBuilder,
  getFeed = _dataAdapter.default.getFeed;
function createUrl(slug, type) {
  if (type === 'tutorial') {
    return "https://www.sanity.io/docs/tutorials/".concat(slug.current);
  } else if (type === 'guide') {
    return "https://www.sanity.io/docs/guides/".concat(slug.current);
  }
  return false;
}
class SanityTutorials extends _react.default.Component {
  constructor() {
    super(...arguments);
    _defineProperty(this, "state", {
      feedItems: []
    });
  }
  componentDidMount() {
    var templateRepoId = this.props.templateRepoId;
    this.subscription = getFeed(templateRepoId).subscribe(response => {
      this.setState({
        title: response.title,
        feedItems: response.items
      });
    });
  }
  componentWillUnmount() {
    if (this.subscription) {
      this.subscription.unsubscribe();
    }
  }
  render() {
    var _this$state = this.state,
      _this$state$title = _this$state.title,
      title = _this$state$title === void 0 ? 'Learn about Sanity' : _this$state$title,
      feedItems = _this$state.feedItems;

    // Filter out items and sections for layout purposes
    var sections = feedItems.filter(i => i._type === 'feedSection');
    var items = feedItems.filter(i => i._type === 'feedItem');
    var columns = length => length < 4 ? [1, 2, 3] : [1, 2, 3, 4];
    return /*#__PURE__*/_react.default.createElement(_ui.Container, {
      width: 4
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 6,
      paddingBottom: 4
    }, /*#__PURE__*/_react.default.createElement(_ui.Card, {
      tone: "primary",
      padding: 4,
      radius: 2,
      border: true,
      marginTop: 4,
      "data-name": "sanity-tutorials-widget-docs-link"
    }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      direction: ['column', 'column', 'row']
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 4,
      flex: 1,
      paddingRight: [0, 0, 4]
    }, /*#__PURE__*/_react.default.createElement(_ui.Heading, {
      as: "h2"
    }, "Getting started guide"), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      as: "p"
    }, "It's time to learn how to build schemas, create content, and connect it to other\n                  applications.")), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      paddingTop: [4, 4, 0],
      align: "center"
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      flex: 1
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      paddingY: 3,
      paddingX: 5,
      tone: "primary",
      as: "a",
      target: "_blank",
      href: "https://www.sanity.io/docs?ref=studio-dashboard",
      text: "Go to docs"
    }))))), sections && (sections === null || sections === void 0 ? void 0 : sections.length) > 0 && sections.map(section => {
      var _section$sectionItems;
      return (section === null || section === void 0 ? void 0 : section.sectionItems) && /*#__PURE__*/_react.default.createElement(_ui.Stack, {
        space: 4,
        key: section._id
      }, /*#__PURE__*/_react.default.createElement(_ui.Heading, null, section.title), /*#__PURE__*/_react.default.createElement(_ui.Grid, {
        as: "ul",
        columns: columns(section === null || section === void 0 ? void 0 : (_section$sectionItems = section.sectionItems) === null || _section$sectionItems === void 0 ? void 0 : _section$sectionItems.length),
        gap: 4,
        "data-name": "sanity-dashboard-widget-tutorials-section"
      }, section === null || section === void 0 ? void 0 : section.sectionItems.map(item => /*#__PURE__*/_react.default.createElement(_ui.Flex, {
        as: "li",
        key: item._id
      }, /*#__PURE__*/_react.default.createElement(FeedItem, {
        feedItem: item
      })))));
    }), items && items.length > 0 && /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 4
    }, /*#__PURE__*/_react.default.createElement(_ui.Heading, null, title), /*#__PURE__*/_react.default.createElement(_ui.Grid, {
      as: "ul",
      columns: columns(items === null || items === void 0 ? void 0 : items.length),
      gap: 4
    }, items.map(feedItem => /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      as: "li",
      key: feedItem._id
    }, /*#__PURE__*/_react.default.createElement(FeedItem, {
      feedItem: feedItem
    })))))));
  }
}
_defineProperty(SanityTutorials, "propTypes", {
  templateRepoId: _propTypes.default.string
});
_defineProperty(SanityTutorials, "defaultProps", {
  templateRepoId: null
});
var _default = SanityTutorials;
exports.default = _default;