"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _default = require("part:@sanity/components/buttons/default");

var _default2 = _interopRequireDefault(_default);

var _AmplifyDeployButton = require("./AmplifyDeployButton.css");

var _AmplifyDeployButton2 = _interopRequireDefault(_AmplifyDeployButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AmplifyDeployButton = function (_React$Component) {
  _inherits(AmplifyDeployButton, _React$Component);

  function AmplifyDeployButton() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, AmplifyDeployButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AmplifyDeployButton.__proto__ || Object.getPrototypeOf(AmplifyDeployButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      error: false,
      building: false
    }, _this.postAmplifyBuild = function () {
      console.log("ok");
      _this.setState({ building: true });
      _this.props.webhookUrls.forEach(function (url) {
        return _this.postToAmplify(url);
      });
    }, _this.postToAmplify = function (url) {
      fetch(url, {
        method: "post",
        headers: { "Content-Type": "application/json" },
        mode: "no-cors"
      }).catch(function (error) {
        _this.setState({ error: true });
        console.log(error);
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(AmplifyDeployButton, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          title = _props.title,
          buttonText = _props.buttonText;

      return _react2.default.createElement(
        "div",
        { className: _AmplifyDeployButton2.default.container },
        _react2.default.createElement(
          "header",
          { className: _AmplifyDeployButton2.default.header },
          _react2.default.createElement(
            "h2",
            { className: _AmplifyDeployButton2.default.title },
            title
          )
        ),
        _react2.default.createElement(
          "div",
          { className: _AmplifyDeployButton2.default.content },
          _react2.default.createElement(
            _default2.default,
            {
              disabled: this.state.building,
              inverted: true,
              onClick: this.postAmplifyBuild
            },
            buttonText
          ),
          this.state.building && _react2.default.createElement(
            "div",
            { style: { color: "green" }, className: _AmplifyDeployButton2.default.footer },
            this.props.deployText
          ),
          this.state.error && _react2.default.createElement(
            "div",
            { style: { color: "red" }, className: _AmplifyDeployButton2.default.footer },
            this.props.deployErrorText
          )
        )
      );
    }
  }]);

  return AmplifyDeployButton;
}(_react2.default.Component);

AmplifyDeployButton.propTypes = {
  title: _propTypes2.default.string,
  buttonText: _propTypes2.default.string,
  webhookUrls: _propTypes2.default.array
};
AmplifyDeployButton.defaultProps = {
  imageWidth: 600,
  title: "Deploy content changes",
  buttonText: "Deploy",
  deployText: "Deploying. You will receive status email.",
  deployErrorText: "There was an error deploying content.",
  webhookUrls: []
};
exports.default = {
  name: "AmplifyDeployButton",
  component: AmplifyDeployButton
};